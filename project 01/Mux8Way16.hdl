// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor.  
 * out = a if sel==000
 *       b if sel==001
 *       etc.
 *       h if sel==111
 */


CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=MuxA0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=MuxB0);
    Mux(a=e[0], b=f[0], sel=sel[0], out=MuxC0);
    Mux(a=g[0], b=h[0], sel=sel[0], out=MuxD0);
    Mux(a=MuxA0, b=MuxB0, sel=sel[1], out=MuxE0);
    Mux(a=MuxC0, b=MuxD0, sel=sel[1], out=MuxF0);
    Mux(a=MuxE0, b=MuxF0, sel=sel[2], out=out[0]);
    Mux(a=a[1], b=b[1], sel=sel[0], out=MuxA1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=MuxB1);
    Mux(a=e[1], b=f[1], sel=sel[0], out=MuxC1);
    Mux(a=g[1], b=h[1], sel=sel[0], out=MuxD1);
    Mux(a=MuxA1, b=MuxB1, sel=sel[1], out=MuxE1);
    Mux(a=MuxC1, b=MuxD1, sel=sel[1], out=MuxF1);
    Mux(a=MuxE1, b=MuxF1, sel=sel[2], out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel[0], out=MuxA2);
    Mux(a=c[2], b=d[2], sel=sel[0], out=MuxB2);
    Mux(a=e[2], b=f[2], sel=sel[0], out=MuxC2);
    Mux(a=g[2], b=h[2], sel=sel[0], out=MuxD2);
    Mux(a=MuxA2, b=MuxB2, sel=sel[1], out=MuxE2);
    Mux(a=MuxC2, b=MuxD2, sel=sel[1], out=MuxF2);
    Mux(a=MuxE2, b=MuxF2, sel=sel[2], out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel[0], out=MuxA3);
    Mux(a=c[3], b=d[3], sel=sel[0], out=MuxB3);
    Mux(a=e[3], b=f[3], sel=sel[0], out=MuxC3);
    Mux(a=g[3], b=h[3], sel=sel[0], out=MuxD3);
    Mux(a=MuxA3, b=MuxB3, sel=sel[1], out=MuxE3);
    Mux(a=MuxC3, b=MuxD3, sel=sel[1], out=MuxF3);
    Mux(a=MuxE3, b=MuxF3, sel=sel[2], out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel[0], out=MuxA4);
    Mux(a=c[4], b=d[4], sel=sel[0], out=MuxB4);
    Mux(a=e[4], b=f[4], sel=sel[0], out=MuxC4);
    Mux(a=g[4], b=h[4], sel=sel[0], out=MuxD4);
    Mux(a=MuxA4, b=MuxB4, sel=sel[1], out=MuxE4);
    Mux(a=MuxC4, b=MuxD4, sel=sel[1], out=MuxF4);
    Mux(a=MuxE4, b=MuxF4, sel=sel[2], out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel[0], out=MuxA5);
    Mux(a=c[5], b=d[5], sel=sel[0], out=MuxB5);
    Mux(a=e[5], b=f[5], sel=sel[0], out=MuxC5);
    Mux(a=g[5], b=h[5], sel=sel[0], out=MuxD5);
    Mux(a=MuxA5, b=MuxB5, sel=sel[1], out=MuxE5);
    Mux(a=MuxC5, b=MuxD5, sel=sel[1], out=MuxF5);
    Mux(a=MuxE5, b=MuxF5, sel=sel[2], out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel[0], out=MuxA6);
    Mux(a=c[6], b=d[6], sel=sel[0], out=MuxB6);
    Mux(a=e[6], b=f[6], sel=sel[0], out=MuxC6);
    Mux(a=g[6], b=h[6], sel=sel[0], out=MuxD6);
    Mux(a=MuxA6, b=MuxB6, sel=sel[1], out=MuxE6);
    Mux(a=MuxC6, b=MuxD6, sel=sel[1], out=MuxF6);
    Mux(a=MuxE6, b=MuxF6, sel=sel[2], out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel[0], out=MuxA7);
    Mux(a=c[7], b=d[7], sel=sel[0], out=MuxB7);
    Mux(a=e[7], b=f[7], sel=sel[0], out=MuxC7);
    Mux(a=g[7], b=h[7], sel=sel[0], out=MuxD7);
    Mux(a=MuxA7, b=MuxB7, sel=sel[1], out=MuxE7);
    Mux(a=MuxC7, b=MuxD7, sel=sel[1], out=MuxF7);
    Mux(a=MuxE7, b=MuxF7, sel=sel[2], out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel[0], out=MuxA8);
    Mux(a=c[8], b=d[8], sel=sel[0], out=MuxB8);
    Mux(a=e[8], b=f[8], sel=sel[0], out=MuxC8);
    Mux(a=g[8], b=h[8], sel=sel[0], out=MuxD8);
    Mux(a=MuxA8, b=MuxB8, sel=sel[1], out=MuxE8);
    Mux(a=MuxC8, b=MuxD8, sel=sel[1], out=MuxF8);
    Mux(a=MuxE8, b=MuxF8, sel=sel[2], out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel[0], out=MuxA9);
    Mux(a=c[9], b=d[9], sel=sel[0], out=MuxB9);
    Mux(a=e[9], b=f[9], sel=sel[0], out=MuxC9);
    Mux(a=g[9], b=h[9], sel=sel[0], out=MuxD9);
    Mux(a=MuxA9, b=MuxB9, sel=sel[1], out=MuxE9);
    Mux(a=MuxC9, b=MuxD9, sel=sel[1], out=MuxF9);
    Mux(a=MuxE9, b=MuxF9, sel=sel[2], out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel[0], out=MuxA10);
    Mux(a=c[10], b=d[10], sel=sel[0], out=MuxB10);
    Mux(a=e[10], b=f[10], sel=sel[0], out=MuxC10);
    Mux(a=g[10], b=h[10], sel=sel[0], out=MuxD10);
    Mux(a=MuxA10, b=MuxB10, sel=sel[1], out=MuxE10);
    Mux(a=MuxC10, b=MuxD10, sel=sel[1], out=MuxF10);
    Mux(a=MuxE10, b=MuxF10, sel=sel[2], out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel[0], out=MuxA11);
    Mux(a=c[11], b=d[11], sel=sel[0], out=MuxB11);
    Mux(a=e[11], b=f[11], sel=sel[0], out=MuxC11);
    Mux(a=g[11], b=h[11], sel=sel[0], out=MuxD11);
    Mux(a=MuxA11, b=MuxB11, sel=sel[1], out=MuxE11);
    Mux(a=MuxC11, b=MuxD11, sel=sel[1], out=MuxF11);
    Mux(a=MuxE11, b=MuxF11, sel=sel[2], out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel[0], out=MuxA12);
    Mux(a=c[12], b=d[12], sel=sel[0], out=MuxB12);
    Mux(a=e[12], b=f[12], sel=sel[0], out=MuxC12);
    Mux(a=g[12], b=h[12], sel=sel[0], out=MuxD12);
    Mux(a=MuxA12, b=MuxB12, sel=sel[1], out=MuxE12);
    Mux(a=MuxC12, b=MuxD12, sel=sel[1], out=MuxF12);
    Mux(a=MuxE12, b=MuxF12, sel=sel[2], out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel[0], out=MuxA13);
    Mux(a=c[13], b=d[13], sel=sel[0], out=MuxB13);
    Mux(a=e[13], b=f[13], sel=sel[0], out=MuxC13);
    Mux(a=g[13], b=h[13], sel=sel[0], out=MuxD13);
    Mux(a=MuxA13, b=MuxB13, sel=sel[1], out=MuxE13);
    Mux(a=MuxC13, b=MuxD13, sel=sel[1], out=MuxF13);
    Mux(a=MuxE13, b=MuxF13, sel=sel[2], out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel[0], out=MuxA14);
    Mux(a=c[14], b=d[14], sel=sel[0], out=MuxB14);
    Mux(a=e[14], b=f[14], sel=sel[0], out=MuxC14);
    Mux(a=g[14], b=h[14], sel=sel[0], out=MuxD14);
    Mux(a=MuxA14, b=MuxB14, sel=sel[1], out=MuxE14);
    Mux(a=MuxC14, b=MuxD14, sel=sel[1], out=MuxF14);
    Mux(a=MuxE14, b=MuxF14, sel=sel[2], out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel[0], out=MuxA15);
    Mux(a=c[15], b=d[15], sel=sel[0], out=MuxB15);
    Mux(a=e[15], b=f[15], sel=sel[0], out=MuxC15);
    Mux(a=g[15], b=h[15], sel=sel[0], out=MuxD15);
    Mux(a=MuxA15, b=MuxB15, sel=sel[1], out=MuxE15);
    Mux(a=MuxC15, b=MuxD15, sel=sel[1], out=MuxF15);
    Mux(a=MuxE15, b=MuxF15, sel=sel[2], out=out[15]);
}
