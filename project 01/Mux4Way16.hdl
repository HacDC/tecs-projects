// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor.  
 * out = a if sel==00
 *       b if sel==01
 *       c if sel==10
 *       d if sel==11
 */


CHIP Mux4Way16 {


    IN a[16], b[16], c[16], d[16], sel[2];

    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=muxA0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=muxB0);
    Mux(a=muxA0, b=muxB0, sel=sel[1], out=out[0]);
    Mux(a=a[1], b=b[1], sel=sel[0], out=muxA1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=muxB1);
    Mux(a=muxA1, b=muxB1, sel=sel[1], out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel[0], out=muxA2);
    Mux(a=c[2], b=d[2], sel=sel[0], out=muxB2);
    Mux(a=muxA2, b=muxB2, sel=sel[1], out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel[0], out=muxA3);
    Mux(a=c[3], b=d[3], sel=sel[0], out=muxB3);
    Mux(a=muxA3, b=muxB3, sel=sel[1], out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel[0], out=muxA4);
    Mux(a=c[4], b=d[4], sel=sel[0], out=muxB4);
    Mux(a=muxA4, b=muxB4, sel=sel[1], out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel[0], out=muxA5);
    Mux(a=c[5], b=d[5], sel=sel[0], out=muxB5);
    Mux(a=muxA5, b=muxB5, sel=sel[1], out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel[0], out=muxA6);
    Mux(a=c[6], b=d[6], sel=sel[0], out=muxB6);
    Mux(a=muxA6, b=muxB6, sel=sel[1], out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel[0], out=muxA7);
    Mux(a=c[7], b=d[7], sel=sel[0], out=muxB7);
    Mux(a=muxA7, b=muxB7, sel=sel[1], out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel[0], out=muxA8);
    Mux(a=c[8], b=d[8], sel=sel[0], out=muxB8);
    Mux(a=muxA8, b=muxB8, sel=sel[1], out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel[0], out=muxA9);
    Mux(a=c[9], b=d[9], sel=sel[0], out=muxB9);
    Mux(a=muxA9, b=muxB9, sel=sel[1], out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel[0], out=muxA10);
    Mux(a=c[10], b=d[10], sel=sel[0], out=muxB10);
    Mux(a=muxA10, b=muxB10, sel=sel[1], out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel[0], out=muxA11);
    Mux(a=c[11], b=d[11], sel=sel[0], out=muxB11);
    Mux(a=muxA11, b=muxB11, sel=sel[1], out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel[0], out=muxA12);
    Mux(a=c[12], b=d[12], sel=sel[0], out=muxB12);
    Mux(a=muxA12, b=muxB12, sel=sel[1], out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel[0], out=muxA13);
    Mux(a=c[13], b=d[13], sel=sel[0], out=muxB13);
    Mux(a=muxA13, b=muxB13, sel=sel[1], out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel[0], out=muxA14);
    Mux(a=c[14], b=d[14], sel=sel[0], out=muxB14);
    Mux(a=muxA14, b=muxB14, sel=sel[1], out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel[0], out=muxA15);
    Mux(a=c[15], b=d[15], sel=sel[0], out=muxB15);
    Mux(a=muxA15, b=muxB15, sel=sel[1], out=out[15]);
}
